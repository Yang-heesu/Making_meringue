#include<iostream>
#include<conio.h>
#include<windows.h>
#include "funcH.h"

//컬러 상수
#define BLACK 0 
#define BLUE 1 
#define GREEN 2 
#define CYAN 3 
#define RED 4 
#define MAGENTA 5 
#define BROWN 6 
#define LIGHTGRAY 7 
#define DARKGRAY 8 
#define LIGHTBLUE 9 
#define LIGHTGREEN 10 
#define LIGHTCYAN 11 
#define LIGHTRED 12 
#define LIGHTMAGENTA 13 
#define YELLOW 14 
#define WHITE 15

void ending_screen(int a, int b, int c) {
	cout << "\n" << endl;

	if (a == 4 && b == 50 && c == 5) {
		cout << "    ★★★★★★★★★★★★★★★★★" << endl;
		cout << "    ★                              ★" << endl;
		cout << "    ★    환상의 머랭쿠키 완성!     ★" << endl;
		cout << "    ★                              ★" << endl;
		cout << "    ★★★★★★★★★★★★★★★★★" << endl;
		cout << "\n" << endl;
		cout << "   ┌─────────────────────────────────────────────────────┐" << endl;
		cout << "   │                          *                      *   │" << endl;
		cout << "   │                                                     │" << endl;
		cout << "   │                                                     │" << endl;
		cout << "   │                                        *            │" << endl;
		cout << "   │          *                    *                     │" << endl;
		cout << "   │                                                     │" << endl;
		cout << "   │                                                     │" << endl;
		cout << "   │     *                    ^                          │" << endl;
		cout << "   │                    (  ( │ )  )                      │" << endl;
		cout << "   │                 (   (   │   )   )                   │" << endl;
		cout << "   │              （___(_____│_____)___)                 │" << endl;
		cout << "   │                                                     │" << endl;
		cout << "   │                                          *          │" << endl;
		cout << "   │   *                                                 │" << endl;
		cout << "   └─────────────────────────────────────────────────────┘" << endl;
		cout << "\n" << endl;
		cout << "    둘이 먹다 하나 죽어도 모를 정도로 맛있는 머랭쿠키!" << endl << endl;
		cout << "    당신은 훌륭한 요리사입니다!" << endl;
	}
	else if (a == 0 && b == 0 && c < 3) {
		cout << "    ★★★★★★★★★★★★★★★★★" << endl;
		cout << "    ★                              ★" << endl;
		cout << "    ★  재사용 금지 핵폐기물 완성!  ★" << endl;
		cout << "    ★                              ★" << endl;
		cout << "    ★★★★★★★★★★★★★★★★★" << endl;
		cout << "\n" << endl;
		cout << "\t       X           X" << endl;
		cout << "\t         X       X" << endl;
		cout << "\t           X   X" << endl;
		cout << "\t             X" << endl;
		cout << "\t             X" << endl;
		cout << "\t           X   X" << endl;
		cout << "\t         X       X" << endl;
		cout << "\t       X           X" << endl;
		cout << "\n" << endl;
		cout << "    요리를 하랬더니 쓰레기를 생성해내셨네요!" << endl << endl;
		cout << "    그냥 요리를 안하는 편이 좋을 것 같습니다!" << endl << endl;
	}
	else if (a == 1 && b == 6 && c == 2) {
		cout << "    ▶ 귀여운 희수^^ 완성! ◀\n" << endl << endl;
		cout << "    희수의 생일은,,, 2001년 6월 2일!" << endl << endl;
		cout << "    제 생일을 맞추셨네요^^ 축하드립니다^^" << endl << endl;
	}
	else if (a == 4 && b == 0 && c < 3) {
		cout << "    ▶ 맛만 있는 머랭 쿠키 완성! ◀\n" << endl << endl;
		cout << "    모양도 별로, 부드럽지도 않지만..." << endl << endl;
		cout << "    재료는 제대로 넣어서 그런지 맛있습니다." << endl << endl;
	}
	else if (a == 0 && b >= 50 && c < 3) {
		cout << "    ▶ 부드러운 머랭쿠키 완성! ◀\n" << endl << endl;
		cout << "    모양도 별로, 맛도 별로지만..." << endl << endl;
		cout << "    많이 섞어서 부드럽습니다." << endl << endl;
	}
	else if (a == 0 && b == 0 && c == 5) {
		cout << "    ▶ 모양만 예쁜 머랭 쿠키 완성! ◀\n" << endl << endl;
		cout << "    모양도 별로, 부드럽지도 않고..." << endl << endl;
		cout << "    잘 짜서 모양만 예쁜 머랭 쿠키 입니다." << endl << endl;
	}
	else {
		cout << "    ▶ 머랭 쿠키 완성! ◀\n" << endl << endl;
		cout << "    무난하게 맛있는 머랭 쿠키입니다." << endl << endl;
	}

	cout << endl << endl;
	getchar();
}

void start(int& stage_num) {
	while (true) {
		cout << "\n\n\n" << endl;
		cout << "   ┌──────────────────────────────────────────┐" << endl; Sleep(100);
		cout << "   │                                          │" << endl; Sleep(100);
		cout << "   │             머랭 쿠키 만들기             │" << endl; Sleep(100);
		cout << "   │                                          │" << endl; Sleep(100);
		cout << "   └──────────────────────────────────────────┘" << endl; Sleep(100);

		cout << "\n\n" << endl;
		cout << "         1) 시작하기" << endl;
		cout << "         2) 게임방법" << endl;
		cout << "         3) 끝내기" << endl;
		cout << "\n";

		while (true) {

			int key = _getch();

			if (key == 49) { //1을 눌렀을 때
				Sleep(100);
				return;
			}
			else if (key == 50) { //2를 눌렀을 때
				guide(); //가이드로 넘어감
				break;
			}
			else if (key == 51) { //3을 눌렀을 때
				cout << "게임 종료" << endl;
				Sleep(500);
				exit(0); //게임이 종료됨
			}
		}
	}


	system("cls");
}

void guide() {
	int page_num = 1;

	while (true) { //계속 반복

		system("cls");

		cout << "\n\n\n" << endl;
		cout << "   ┌──────────────────────────────────────────┐" << endl; Sleep(100);
		cout << "   │                                          │" << endl; Sleep(100);
		cout << "   │                게임 방법                 │" << endl; Sleep(100);
		cout << "   │                                          │" << endl; Sleep(100);
		cout << "   └──────────────────────────────────────────┘" << endl; Sleep(100);
		cout << "\n\n";

		cout << "   Stage " << page_num << " 설명" << endl << endl;

		switch (page_num) { //page_num에 따라 출력되는 것이 달라짐
		case 1:
			cout << "   머랭쿠키를 만들기 위해서 재료가 필요하다!" << endl << endl;
			cout << "   재료 리스트를 외워서, 순서대로 재료를 맞춰보자." << endl << endl;
			cout << "   재료가 하나라도 틀리면 fail..ㅠㅠ" << endl << endl;
			cout << "   잘 기억해서 맞춰보자!" << endl << endl;
			cout << "\n\t\t◁  ▶\n" << endl;
			break;
		case 2:
			cout << "   머랭쿠키를 만들기 위해서 반죽을 섞어야 한다." << endl << endl;
			cout << "   스페이스키를 연타해서 반죽을 원하는 만큼 섞어보자!" << endl << endl;
			cout << "   「스페이스 3번 당 => 회전 1번 」으로 본다." << endl << endl;
			cout << "   많이 섞을 수록 멋진 작품이 만들어진다고 하는데...?" << endl << endl;
			cout << "\n\t\t◀  ▶\n" << endl;
			break;
		case 3:
			cout << "   머랭쿠키를 만들기 위해서 짤주머니로 짜야 한다." << endl << endl;
			cout << "   막대기 색 있는 부분에 맞춰 스페이스바를 눌러보자." << endl << endl;
			cout << "   정확히 짜지 않으면 갯수로 쳐주지 않는다." << endl << endl;
			cout << "   5번 안에 3번을 성공시키지 않으면 실패!" << endl << endl;
			cout << "\n\t\t◀  ▷\n" << endl;
			break;
		}
		cout << "   (x키를 누르면 돌아갑니다)" << endl;


		while (true) {

			int key = _getch();

			if (key == (int)'x' || key == (int)'X') { //만약 x를 누르면
				system("cls"); //화면이 전부 삭제되고
				return; //리턴 됨
			}

			else if (key == 224) { //방향키 입력
				key = _getch();
				if (key == 75 && page_num == 2 || key == 75 && page_num == 3) { // 2, 3페이지에서 왼쪽 키를 눌렀을 때
					page_num--; //이전 페이지로
				}
				else if (key == 77 && page_num == 1 || key == 77 && page_num == 2) { // 1, 2페이지에서 오른쪽 키를 눌렀을 때
					page_num++; //다음 페이지로
				}
				else if (key == 75 && page_num == 1) { //1페이지에서 왼쪽 버튼을 눌렀을 때 페이지 3으로 감
					page_num = 3;
				}
				else { //3페이지에서 오른쪽 버튼을 눌렀을 때 페이지 1로 감
					page_num = 1;
				}
				break;
			}
			else {
				continue;
			}
		}
	}
}

void start_count(int& stage_num) {
	system("cls");
	for (int i = 3; i >= 0; i--) {

		switch (i) { //i에 따라 출력되는 이미지가 달라짐
		case 0:
			cout << "\n\n\n\n" << endl;
			Sleep(300);
			cout << "          ┌────────────────────┐" << endl;
			cout << "          │                    │" << endl;
			cout << "          │      스테이지 " << stage_num << "    │" << endl;
			cout << "          │                    │" << endl;
			cout << "          └────────────────────┘" << endl;
			Sleep(600);
			system("cls");
			cout << "\n\n\n\n" << endl;
			cout << "          ┌────────────────────┐" << endl;
			cout << "          │                    │" << endl;
			cout << "          │     게임 시작~!    │" << endl;
			cout << "          │                    │" << endl;
			cout << "          └────────────────────┘" << endl;
			Sleep(300);
			return;
		default:
			cout << "\n\n\n\n" << endl;
			Sleep(200);
			cout << "          ┌────────────────────┐" << endl;
			cout << "          │                    │" << endl;
			cout << "          │          " << i << "         │" << endl;
			cout << "          │                    │" << endl;
			cout << "          └────────────────────┘" << endl;
			Sleep(200);
			system("cls");
		}
	}
	stage_num++;
}

void stage_end() {
	system("cls");
	cout << "\n\n\n\n" << endl;
	cout << "          ┌────────────────────┐" << endl;
	cout << "          │                    │" << endl;
	cout << "          │       게임 끝!     │" << endl;
	cout << "          │                    │" << endl;
	cout << "          └────────────────────┘" << endl;
	Sleep(800);
	system("cls");
}

void game_end() {
	system("cls");
	cout << "\n\n\n\n" << endl;
	Sleep(1000);
	cout << "          ┌────────────────────┐" << endl;
	cout << "          │                    │" << endl;
	cout << "          │     머랭 굽는 중   │" << endl;
	cout << "          │                    │" << endl;
	cout << "          └────────────────────┘" << endl;
	Sleep(1000);
	system("cls");
	cout << "\n\n\n\n" << endl;
	cout << "          ┌────────────────────┐" << endl;
	cout << "          │                    │" << endl;
	cout << "          │     다 구웠어요!   │" << endl;
	cout << "          │                    │" << endl;
	cout << "          └────────────────────┘" << endl;
	Sleep(2000);
	system("cls");
}

void stage1(int& stage_score, int& stage_num) {
	bool T_or_F[4];
	int t_num = 0;
	int key;

	start_count(stage_num);
	system("cls");

	list();
	Sleep(500);
	system("cls");

	for (int i = 0; i<4; i++) {
		cout << "\n\n" << i + 1 << "번째 재료는?" << endl;
		if (i == 0) {
			cout << "\n\n" << endl;
			cout << "  ▶ 1번 계란 노른자" << endl;
			cout << "  ▶ 2번 짤주머니" << endl;
			cout << "  ▶ 3번 볼" << endl;
			cout << "  ▶ 4번 설탕" << endl;

			while (true) {
				key = _getch();
				if (key == 52) {
					textcolor(GREEN, BLACK);
					cout << "\n정답!" << endl;
					T_or_F[i] = true;
				}
				else if (key == 0) continue;
				else {
					textcolor(RED, BLACK);
					cout << "\n틀림!" << endl;
					T_or_F[i] = false;
				}
				break;
			}
		}
		else if (i == 1) {
			cout << "\n\n" << endl;
			cout << "  ▶ 1번 레몬즙" << endl;
			cout << "  ▶ 2번 계란 흰자" << endl;
			cout << "  ▶ 3번 짤주머니" << endl;
			cout << "  ▶ 4번 계란 노른자" << endl;

			while (true) {
				key = _getch();
				if (key == 50) {
					textcolor(GREEN, BLACK);
					cout << "\n정답!" << endl;
					T_or_F[i] = true;
				}
				else if (key == 0) continue;
				else {
					textcolor(RED, BLACK);
					cout << "\n틀림!" << endl;
					T_or_F[i] = false;
				}
				break;
			}
		}
		else if (i == 2) {
			cout << "\n\n" << endl;
			cout << "  ▶ 1번 레몬즙" << endl;
			cout << "  ▶ 2번 인삼즙" << endl;
			cout << "  ▶ 3번 라임즙" << endl;
			cout << "  ▶ 4번 올리브" << endl;

			while (true) {
				key = _getch();
				if (key == 49) {
					textcolor(GREEN, BLACK);
					cout << "\n정답!" << endl;
					T_or_F[i] = true;
				}
				else if (key == 0) continue;
				else {
					textcolor(RED, BLACK);
					cout << "\n틀림!" << endl;
					T_or_F[i] = false;
				}
				break;
			}
		}
		else {
			cout << "\n\n" << endl;
			cout << "  ▶ 1번 천연색소" << endl;
			cout << "  ▶ 2번 인공색소" << endl;
			cout << "  ▶ 3번 볼" << endl;
			cout << "  ▶ 4번 짤주머니" << endl;

			while (true) {
				key = _getch();
				if (key == 49) {
					textcolor(GREEN, BLACK);
					cout << "\n정답!" << endl;
					T_or_F[i] = true;
				}
				else if (key == 0) continue;
				else {
					textcolor(RED, BLACK);
					cout << "\n틀림!" << endl;
					T_or_F[i] = false;
				}
				break;
			}
		}
		textcolor(WHITE, BLACK);
		Sleep(1000);
		system("cls");
	}

	for (int j = 0; j < 4; j++) {
		if (T_or_F[j] == true) t_num++;
	}

	stage_score = t_num;
	stage_num++;
	stage_end();
}

void stage2(int& stage_score, int& stage_num) {
	int num = 0, key = 0;

	start_count(stage_num);
	system("cls");

	while (true) {

		cout << "\n\n\n(다 했으면 x 클릭!)" << endl;

		if (num / 3 > 50) {
			textcolor(YELLOW, BLACK);
		}
		else if (num / 3 == 50) {
			textcolor(GREEN, BLACK);
		}
		else if (num / 3 >= 40) {
			textcolor(LIGHTMAGENTA, BLACK);
		}
		else if (num / 3 >= 30) {
			textcolor(RED, BLACK);
		}

		cout << "회전 수 : " << num / 3 << endl;

		textcolor(WHITE, BLACK);

		blending(num % 3);


		while (true) {
			key = _getch();
			if (key == VK_SPACE) { //스페이스바를 누르면 blending의 그림이 바뀜
				num++;
				system("cls");
				break;
			}
			else if (key == 'x' || key == 'X') { //x를 누르면 다음 스테이지로 넘어감
				stage_end();
				stage_score = num / 3;
				stage_num++;
				return;
			}
		}
	}
}

void stage3(int& stage_score, int& stage_num) {
	int score = 0, side = 10, key, num = 5;
	bool s = false;

	start_count(stage_num);

	while (true) {
		cout << "\n남은 횟수 : " << num << endl;
		cout << "성공 횟수 : " << score << endl << endl;
		cout << "         □□□□□□□□□□■□□□□□□□□□□" << endl;
		gotoxy(side, 7); //맨 처음 네모 10,6    맨 끝 50,6      가운데 29~31,6
		cout << "▲";
		cout << endl << endl << endl;

		switch (side) {
		case 10: s = false; break; //왼쪽 맨 끝에 다다르면 s를 false로 바꾸어줌
		case 50: s = true; break; //오른쪽 맨 끝에 다다르면 s를 true로 바꾸어줌
		}

		if (side >= 10 || side <= 50) {
			if (s == false) side++; //오른쪽으로 이동
			else side--; //왼쪽으로 이동
		}

		if (_kbhit()) {
			key = _getch();
			if (key == VK_SPACE) {
				num--;
				if (side == 29 || side == 30 || side == 31) { //size가 29~31이면 성공으로 판단
					score++;
					squeeze(true); //머랭을 짜는 데 성공한 그림 출력
					textcolor(GREEN, BLACK);
					cout << "\n성공!" << endl;
					textcolor(WHITE, BLACK);
					Sleep(500);
				}
			}
		}
		else {
			squeeze(false); //머랭을 짜는 데 실패한 그림 출력
		}

		if (num == 0) break;

		system("cls");
	}

	stage_score = score;
	stage_end();
	game_end();
}

void blending(int num) {
	cout << "\n";

	if (num == 0) {
		cout << "   ┌─────────────────────────────────────────────────────┐" << endl;
		cout << "   │                                                     │" << endl;
		cout << "   │                                                     │" << endl;
		cout << "   │           _                                         │" << endl;
		cout << "   │          ││                                         │" << endl;
		cout << "   │          ││                                         │" << endl;
		cout << "   │          ││                                         │" << endl;
		cout << "   │          ││                                         │" << endl;
		cout << "   │          ││                                         │" << endl;
		cout << "   │          ││                                         │" << endl;
		cout << "   │         ┌  ┐                                        │" << endl;
		cout << "   │         │  │                                        │" << endl;
		cout << "   │     ──────────────────────────────────────────      │" << endl;
		cout << "   │     ＼                                       ／     │" << endl;
		cout << "   │       ＼                                    ／      │" << endl;
		cout << "   └─────────────────────────────────────────────────────┘" << endl;
	}
	else if (num == 1) {
		cout << "   ┌─────────────────────────────────────────────────────┐" << endl;
		cout << "   │                                                     │" << endl;
		cout << "   │                                                     │" << endl;
		cout << "   │                          _                          │" << endl;
		cout << "   │                         ││                          │" << endl;
		cout << "   │                         ││                          │" << endl;
		cout << "   │                         ││                          │" << endl;
		cout << "   │                         ││                          │" << endl;
		cout << "   │                         ││                          │" << endl;
		cout << "   │                         ││                          │" << endl;
		cout << "   │                        ┌  ┐                         │" << endl;
		cout << "   │                        │  │                         │" << endl;
		cout << "   │     ──────────────────────────────────────────      │" << endl;
		cout << "   │     ＼                                       ／     │" << endl;
		cout << "   │       ＼                                    ／      │" << endl;
		cout << "   └─────────────────────────────────────────────────────┘" << endl;
	}
	else {
		cout << "   ┌─────────────────────────────────────────────────────┐" << endl;
		cout << "   │                                                     │" << endl;
		cout << "   │                                                     │" << endl;
		cout << "   │                                          _          │" << endl;
		cout << "   │                                         ││          │" << endl;
		cout << "   │                                         ││          │" << endl;
		cout << "   │                                         ││          │" << endl;
		cout << "   │                                         ││          │" << endl;
		cout << "   │                                         ││          │" << endl;
		cout << "   │                                         ││          │" << endl;
		cout << "   │                                        ┌  ┐         │" << endl;
		cout << "   │                                        │  │         │" << endl;
		cout << "   │     ──────────────────────────────────────────      │" << endl;
		cout << "   │     ＼                                       ／     │" << endl;
		cout << "   │       ＼                                    ／      │" << endl;
		cout << "   └─────────────────────────────────────────────────────┘" << endl;
	}
}

void squeeze(bool ft) {
	if (ft == false) {
		cout << "   ┌─────────────────────────────────────────────────────┐" << endl;
		cout << "   │                 ■■■■■■■■■■                │" << endl;
		cout << "   │                   ■■■■■■■■                  │" << endl;
		cout << "   │                    ■■■■■■■                   │" << endl;
		cout << "   │                     ■■■■■■                    │" << endl;
		cout << "   │                      ■■■■■                     │" << endl;
		cout << "   │                        □□□                       │" << endl;
		cout << "   │                        □□□                       │" << endl;
		cout << "   │                                                     │" << endl;
		cout << "   │                                                     │" << endl;
		cout << "   │                                                     │" << endl;
		cout << "   │                                                     │" << endl;
		cout << "   │                                                     │" << endl;
		cout << "   │                                                     │" << endl;
		cout << "   │                                                     │" << endl;
		cout << "   └─────────────────────────────────────────────────────┘" << endl;
	}
	else {
		cout << "   ┌─────────────────────────────────────────────────────┐" << endl;
		cout << "   │                 ■■■■■■■■■■                │" << endl;
		cout << "   │                   ■■■■■■■■                  │" << endl;
		cout << "   │                    ■■■■■■■                   │" << endl;
		cout << "   │                     ■■■■■■                    │" << endl;
		cout << "   │                      ■■■■■                     │" << endl;
		cout << "   │                        □□□                       │" << endl;
		cout << "   │                        □□□                       │" << endl;
		cout << "   │                                                     │" << endl;
		cout << "   │                                                     │" << endl;
		cout << "   │                           ^                         │" << endl;
		cout << "   │                     (  ( │ )  )                     │" << endl;
		cout << "   │                  (   (   │   )   )                  │" << endl;
		cout << "   │               （___(_____│_____)___)                │" << endl;
		cout << "   │                                                     │" << endl;
		cout << "   └─────────────────────────────────────────────────────┘" << endl;
	}

}

void list() {
	cout << "\n\n\n" << endl;
	cout << "        ┌───────────────────────────────┐" << endl;
	cout << "        │                               │" << endl;
	cout << "        │                               │" << endl;
	cout << "        │          필요한 재료          │" << endl;
	cout << "        │                               │" << endl;
	cout << "        │     1. 설탕                   │" << endl;
	cout << "        │     2. 계란 흰자              │" << endl;
	cout << "        │     3. 레몬즙                 │" << endl;
	cout << "        │     4. 천연색소               │" << endl;
	cout << "        │                               │" << endl;
	cout << "        │                               │" << endl;
	cout << "        └───────────────────────────────┘" << endl;
}

void textcolor(int foreground, int background) { //text 색깔을 바꾸게 해주는 함수
	int color = foreground + background * 16;
	SetConsoleTextAttribute(GetStdHandle(STD_OUTPUT_HANDLE), color);
}

void gotoxy(int x, int y) //콘솔에서 원하는 곳에 출력하게 해주는 함수

{

	COORD Pos = { (short)x - 1, (short)y - 1 };

	SetConsoleCursorPosition(GetStdHandle(STD_OUTPUT_HANDLE), Pos);

}